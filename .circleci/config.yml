# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  sayhello:
    description: 'a very simple command to write something to the console'
    parameters:
      to:
        type: string
        default: 'Hello world!'
    steps:
      - run: echo << parameters.to >>

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: 'Say hello'
          command: 'echo Hello, World!'
  print-hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: 'say hello'
          command: 'echo hello'
      - run: mkdir -p workspace
      - run: echo "hello world!" > workspace/output.txt
      - persist_to_workspace:
          root: workspace
          paths:
            - output.txt
  print-world:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: 'say world'
          command: |
            echo $MY_NAME_ENV $PWD
      - attach_workspace:
          at: workspace
      - run: pwd
      - run: whoami
      - run: ls -la
      - run: |
          cd workspace
          cat output.txt
      - sayhello:
          to: 'asd'

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
      - print-hello
      - print-world:
          requires:
            - print-hello
